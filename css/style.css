*,
*::before, 
*::after{
    /* Used to allow width and height values to include padding and border */
    box-sizing: border-box; 
}

/* Customer CSS property values */

:root{
    --ff-primary:  'Source Sans Pro', sans-serif;
    --ff-secondary: 'Source Code Pro', monospace;

    --fw-reg: 300; 
    --fw-bold: 900; 

    --clr-light: #fff; 
    --clr-dark: #303030; 
    --clr-accent: #16e0bd; 

    /* Use rem for font size */
    --fs-h1: 3rem; 
    --fs-h2: 2.25rem; 
    --fs-h3: 1.25rem; 
    --fs-body: 1rem; 

    /* box shadow */

    --bs:   0.25em 0.25em 0.75em rgba(0,0,0,.25),
            0.125em 0.125em 0.25em rgba(0,0,0,.15); 

}

/* Only implement styles if supported by browser, is a screen(screen, print, speech) media 
and has min width of ... */
@media only screen and (min-width: 880px){
    :root{
        --fs-h1: 4.5rem; 
        --fs-h2: 3.75rem; 
        --fs-h3: 1.5rem; 
        --fs-body: 1.125rem; 
    }
}


/* General Styles */

/* Setting default element styles */
body{
    /* background colour */
    background: var(--clr-light);
    /* font colour */
    color: var(--clr-dark); 
    margin: 0; 
    font-family: var(--ff-primary);
    font-size: var(--fs-body); 
    /* line spacing unitless to scale proportionaly to zoom */
    line-height: 1.6;

}

section{
    padding: 5em 2em; 
}

img{
    display: block; 
    max-width: 100%;
}

/* Setting dafault state values */
:active{
    color: floralwhite;
}


:focus{
    /* Add a outline to an element
    Outline does not contribute to element dimension
    Outline overlaps content */
    outline: 3px solid var(--clr-accent); 
    outline-offset: 3px;
}

:visited{
    color: rgb(99, 12, 240);
}

.btn {
    display: inline-block; 
    padding: .5em 2.5em; 
    background: var(--clr-accent);
    /* To remove underline */
    text-decoration: none;
    /* Change in cursor */
    cursor: pointer;
    font-size: .8rem; 
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    /* Use to apply transition to sepcific css property 
    Have to indicate how to slow the transition of element state
    Indicate how the speed is distributed */
    transition: transform 200ms ease-in-out; 
}

.btn:hover{
    /* 2D animation that scales btn when mouse is over element */
    transform: scale(1.1);
}

strong{ font-weight: var(--fw-bold)}

/* Typography */


h1,
h2,
h3{
    line-height: 1;
    margin: 0;
}

h1{ font-size: var(--fs-h1); }
h2{ font-size: var(--fs-h2); }
h3{ font-size: var(--fs-h3); }

.section__title{
    /* Use em for text padding and margin */
    margin-bottom: .25em;
}

.section__title--intro{
    font-weight: var(--fw-reg); 
}

.section__title--intro strong{
    display: block;
}

.section__subtitle{
    margin: 0; 
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about{
    background: var(--clr-accent); 
    padding: .25em 1em; 
    font-family: var(--ff-secondary); 
    margin-bottom: 1em;
}

nav{display:none}

/* Intro Section */

.intro{
    position: relative;

}

.intro__img{
    box-shadow: var(--bs);
}

@media only screen and (min-width:600px){
    .intro{
        display: grid; 
        width: min-content;
        margin: 0 auto;
        column-gap: 1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        grid-template-columns: min-content max-content;
    }

    .intro__img{
        grid-area: img; 
        min-width: 280px;
        position: relative;
        /* Layer the image above the subtitle element */
        z-index: 2;
    }

    .section__subtitle--intro{
        /* To ensure that the text stays at the top of the
        element. */
        align-self: flex-start;
        /* Span across all columns */
        grid-column: -1 / 1;
        grid-row: 2;
        text-align: right;
        position: relative;
        /* Span 1.5 em to the left of the relative position */
        left: -1.5em;
        /* In order to span the parent section span 100 percent of the parent + 1.5 em to offset the shift to the left position */
        width: calc(100% + 1.5em);
    }

}


.my-services{
    /* Background Colour for fail safe mechanism */
    background-color: var(--clr-dark);
    /* 
    Insert bacground picture
    background-image: url();
    This is to ensure that the background does not repeat itself
    background-size: cover; 
    This is to tint the image in order to have easily readable 
    text over image
    background-blend-mode: multiply;
    */
    color: var(--clr-light);
    text-align: center; 
}

.section__title--services{
    color: var(--clr-accent);
    position: relative; 
}

.section__title--services::after{
    /* Have to give pseudo element the content property 
    or else they wouldn't appear */
    content: ''; 
    display: block;
    width: 3em; 
    height: 1px;
    margin: 0.5em auto 1em;
    /* currentColor of the actual element */
    background: var(--clr-light); 
    /* To set transparency */
    opacity: 0.5;

}

.services{
    margin-bottom: 4em; 
}

.service{
    /* Use pixels when dealing with max and min width */
    max-width: 500px;
    margin: 3em auto; 
}

@media only screen and (min-width: 800px){
    .services{
        display: flex; 
        max-width: 1500px;
        /* Did not use shorthand for margin so that 
        margin bottom is not overwritten */
        margin-left: auto; 
        margin-right: auto; 
    }

    /* Access all service content succeeding another service content */
    .service + .service{
        margin-left: 2em; 
    }
}

/* About Me */

.about-me{
    max-width: 1000px;
    margin: 0 auto; 
}

@media only screen and (min-width: 300px){
    .about-me{
        text-align: center;
    }

    .section__subtitle--about{
        padding: .5em auto; 
        margin: 1em auto;
    }

}

@media only screen and (min-width: 600px){
    .about-me{
        display: grid; 
        /* When dealing with img sizes we use pixels */
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        column-gap: 2em;
    }

    .section__title--about{
        /* grid-column: 1; */
        grid-area: title; 
    }

    .section__subtitle--about{
        grid-column: 1/-1; 
        grid-row: 2;
        position: relative; 
        left: -1em; 
        width: calc(100% + 2em); 
        padding-left: 1em; 
        padding-right: calc(200px + 3em); 
    }

    .section__img--about-me{
        grid-area: img; 
        position: relative; 
        z-index: 2; 
        /* Can use grid areas or grid rows and columns for element placemennt within grid */
        /* grid-row: 1/-1; 
        grid-column: 2; */
    }
}


/* /About Me */

/* My Work */

.my-work{
    background-color: var(--clr-dark);
    color: var(--clr-light); 
    text-align: center; 
}

.section__subtitle--my-work{
    margin-bottom: 2em;
}

.portfolio{
    text-align: center;
    margin: 0 auto; 
}

/* /My Work */

/* 

.porfolio{
    display: grid; 
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr); 
}

.portfolio__item{
    background: var(--clr-accent); 
    overflow: hidden; 
}

.portfolio__img{
    transition: 
        transform 750ms cubic-bezier(.5, 0, .5, 1), 
        opacity 250ms linear; 
}

.portfolio__item:focus{
    position: relative; 
    z-index: 2; 
}

.porfolio__img:hover,
.portfolio__item:focus .portflio__img{
    transform: scale(1.2); 
    opacity: .75; 
}

*/


/* Footer */

.footer{
    background: #111; 
    color: var(--clr-accent); 
    text-align: center;
    padding: 2.5em 0; 
    font-size: var(--fs-h3); 
}

.footer a{
    color: inherit;
    text-decoration: none;
}

.footer__link{
    
    font-weight: var(--fw-bold); 
}

.footer__link:hover,
.social-list__link:hover{
    opacity: .7; 
}

.footer__link:hover{
    text-decoration: underline;
}

.social-list{
    list-style: none;
    display: flex; 
    justify-content: center;
    margin: 2em 0 0; 
    padding: 0; 
}

.social-list__item{
    margin: 0 .5em; 
}

.social-list__link{
    padding: .5em; 
}


